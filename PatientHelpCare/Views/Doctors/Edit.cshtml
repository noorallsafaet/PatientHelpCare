@model PatientHelpCare.DataModel.Doctor

@{
    ViewBag.Title = "Edit";
}
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Edit of Information</h5>
                    <div class="ibox-tools">
                        @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-primary  btn-xs" })
                    </div>
                </div>
                <div class="ibox-content">
                    @using (Html.BeginForm("Edit", "Doctors", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.DoctorId)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BMDC, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.BMDC, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BMDC, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Specialist, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @*<select id="Specialist" name="Specialist" class="form-control">
                                       
                                        <option @if (Model.Specialist == null) { @: selected
                                                }>
                                            Select Disease
                                        </option>
                                        <option @if (Model.Specialist == "Heart") { @: selected
                                                }>
                                        Heart
                                        </option>
                                        <option @if (Model.Specialist == "Eye") { @: selected
                                                }>
                                        Eye
                                        </option>

                                        <option @if (Model.Specialist == "Skin") { @: selected
                                                                                                                                                                                                                                }>
                                        Skin
                                        </option>
                                        <option @if (Model.Specialist == "Gastroenterology") { @: selected
                                                                                                                                                                                                                                }>
                                        Gastroenterology
                                        </option>
                                        <option @if (Model.Specialist == "Endocrinology") { @: selected
                                                                                                                                                                                                                                                                                }>
                                        Endocrinology
                                        </option>
                                    </select>*@
                @Html.DropDownListFor(m => m.Specialist, new List<SelectListItem>
                   { new SelectListItem{Text="Heart", Value="Heart"},
                     new SelectListItem{Text="Eye", Value="Eye"},
                     new SelectListItem{Text="Skin", Value="Skin"},
                     new SelectListItem{Text="Gastroenterology", Value="Gastroenterology"},
                     new SelectListItem{Text="Endocrinology", Value="Endocrinology"}},
                     "Select Specialist", new { @class = "form-control" })
               
                                    @Html.ValidationMessageFor(model => model.Specialist, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.OverView, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.OverView, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.OverView, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Fee, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Fee, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Fee, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <p class="control-label col-md-2" style="font-weight:bold;">
                                    Date of Birth
                                </p>
                                <div class="col-md-10">
                                    <input id="DateOfBirth" name="DateOfBirth" type="text" class="form-control" />
                                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                        @*<select id="Gender" name="Gender" class="form-control">
                                            <option @if (Model.Gender == "0") { @: selected
                                                                                                                                                                                }>
                                                Select Location
                                            </option>
                                            <option @if (Model.Gender == "Male") { @: selected
                                                                                                                                }>
                                            Male
                                            </option>
                                            <option @if (Model.Gender == "Female") { @: selected
                                                                                                                                }>
                                            Female
                                            </option>
                                        </select>*@
                                    @Html.DropDownListFor(m => m.Gender, new List<SelectListItem> 
                   { new SelectListItem{Text="Male", Value="Male"},
                     new SelectListItem{Text="Female", Value="Female"} },
                     "Select Gender", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <p class = "control-label col-md-2" style="font-weight:bold;">
                                    Upload
                                </p>
                                <div class="col-md-10">
                                    <input id="PhotoLocation" name="PhotoLocation" type="file" class="form-control" />
                                </div>
                            </div>

                            <div class="form-group">
                                <p class="control-label col-md-2" style="font-weight:bold;">
                                    Photo
                                </p>
                                @if (Model.PhotoLocation != null)
                                {
                                    <div class="col-md-10">
                                        <img src="@Model.PhotoLocation" name="ImageViewer" id="ImageViewer" alt="Mountain View" style="min-width:100px; width:100px; max-height:100px; height:100px; height:100px; min-height:100px;" class="form-control">
                                    </div>
                                }
                                else
                                {
                                    <div class="col-md-10">
                                        <img src="~/Images/unknown.png" name="ImageViewer" id="ImageViewer" alt="Mountain View" style="min-width:100px; width:100px; max-height:100px; height:100px; height:100px; min-height:100px;" class="form-control">
                                    </div>
                                }
                                
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Homephone, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Homephone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Homephone, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Officephone, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Officephone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Officephone, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    
                                    @*<select id="Location" name="Location" class="form-control">
                                        <option @if (Model.Location == "0" ) { @: selected
                                                                                                                            }>
                                            Select Location
                                        </option>
                                        <option @if (Model.Location == "North Dhaka") { @: selected
                                                                            }>
                                            North Dhaka
                                        </option>
                                        <option @if (Model.Location == "South Dhaka") { @: selected
                                                                            }>
                                            South Dhaka
                                        </option>
                                    </select>*@
                                    @Html.DropDownListFor(m => m.Location, new List<SelectListItem>
                   { new SelectListItem{Text="North Dhaka", Value="North Dhaka"},
                     new SelectListItem{Text="South Dhaka", Value="South Dhaka"} },
                     "Select Location", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @*<select id="Area" name="Area" class="form-control">
                                        
                                        <option @if (Model.Location == "0") { @: selected
                                                                                                                                                                            }>
                                            Select Area
                                        </option>
                                        <option @if (Model.Location == "Mirpur") { @: selected
                                                              }>
                                            Mirpur
                                        </option>
                                        <option @if (Model.Location == "Mohammadpur") { @: selected
                                                                                                                            }>
                                        Mohammadpur
                                        </option>

                                        <option @if (Model.Location == "Gulshan") { @: selected
                                                                                                              }>
                                            Mirpur
                                        </option>
                                        <option @if (Model.Location == "Dhanmondi") { @: selected
                                                                                                                                                                            }>
                                            Mohammadpur
                                        </option>
                                        <option @if (Model.Location == "Mogbazar") { @: selected
                                                                                                              }>
                                            Mirpur
                                        </option>
                                        <option @if (Model.Location == "Polton") { @: selected
                                                                                                                                                                            }>
                                            Mohammadpur
                                        </option>
                                    </select>*@
                                    @Html.DropDownListFor(m => m.Area, new List<SelectListItem>
                   { new SelectListItem{Text="Mirpur", Value="Mirpur"},
                     new SelectListItem{Text="Mohammadpur", Value="Mohammadpur"},
                     new SelectListItem{Text="Gulshan", Value="Gulshan"},
                     new SelectListItem{Text="Dhanmondi", Value="Dhanmondi"},
                     new SelectListItem{Text="Mogbazar", Value="Mogbazar"},
                     new SelectListItem{Text="Polton", Value="Polton"}},
                     "Select Area", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    
                                        <input id="ZipCode" name="ZipCode" type="text" value="@Model.ZipCode" class="form-control" />
                                   
                                    @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                                </div>
                            </div>                         

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Save" class="btn btn-primary" />
                                    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-white" })
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery-2.2.3.js"></script>
<script src="~/Scripts/Doctors.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script>

    $("#DateOfBirth").datepicker({
        //        showOn: 'both',
        //        buttonImage: '/images/calendar.gif',
        buttonImageOnly: true,
        autoOpen: true,
        changeMonth: true,
        dateFormat: "dd M yy",
        changeYear: true,
        //        showButtonPanel: true,
        autoSize: true,
        setDate: "0"
    }).datepicker("setDate", "0");

</script>